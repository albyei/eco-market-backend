// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STAFF
}

enum Major {
  RPL
  TKJ
  PG
}

enum AchievementCategory {
  ACADEMIC
  SPORTS
  ARTS
}

model User {
  id              Int      @id @default(autoincrement())
  uuid            String   @default("")
  name            String   @db.VarChar(255)
  email           String   @unique @db.VarChar(255)
  password        String   @db.VarChar(255) // Hashed password
  profile_picture String?  @db.VarChar(255)
  role            Role     @default(ADMIN)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  news            News[]   @relation("NewsAuthor")
}

model News {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default("")
  title     String   @db.VarChar(255)
  content   String   @db.Text
  date      DateTime @default(now())
  image     String?  @db.VarChar(255) // URL ke cloud storage
  authorId  Int?
  author    User?    @relation("NewsAuthor", fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Achievement {
  id          Int                  @id @default(autoincrement())
  uuid        String               @unique @default("")
  studentName String               @db.VarChar(255)
  title       String               @db.VarChar(255)
  description String?              @db.Text
  date        DateTime             @default(now())
  category    AchievementCategory?
  image       String?              @db.VarChar(255)
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

model SchoolInfo {
  id            Int      @id @default(autoincrement())
  totalStudents Int      @default(0)
  major         Major?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  date        DateTime @default(now())
  location    String?  @db.VarChar(255)
  description String?  @db.Text
  image       String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Testimony {
  id             Int      @id @default(autoincrement())
  alumniName     String   @db.VarChar(255)
  testimony      String   @db.Text
  graduationYear Int?
  photo          String?  @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Teacher {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  photo     String?  @db.VarChar(255)
  subject   String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SchoolActivity {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String?  @db.Text
  date        DateTime @default(now())
  media       String?  @db.VarChar(255)
  image       String?  @db.VarChar(255) // Misalnya "image", "video"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PPDB {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid())
  title       String   @db.VarChar(255)
  description String   @db.Text
  startDate   DateTime @default(now())
  endDate     DateTime @default(now())
  contactInfo String?  @db.VarChar(255)
  document    String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
